//
// Generated file, do not edit! Created by opp_msgc 4.3 from src/node/communication/routing/floodingRouting/FloodingRoutingPacket.msg.
//

#ifndef _FLOODINGROUTINGPACKET_M_H_
#define _FLOODINGROUTINGPACKET_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0403
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "RoutingPacket_m.h"
// }}



/**
 * Enum generated from <tt>src/node/communication/routing/floodingRouting/FloodingRoutingPacket.msg</tt> by opp_msgc.
 * <pre>
 * enum floodingRoutingPacketDef {
 * 	FLOODING_DATA_PACKET = 1;
 * 	SETUP_PACKET = 2;
 * }
 * </pre>
 */
enum floodingRoutingPacketDef {
    FLOODING_DATA_PACKET = 1,
    SETUP_PACKET = 2
};

/**
 * Class generated from <tt>src/node/communication/routing/floodingRouting/FloodingRoutingPacket.msg</tt> by opp_msgc.
 * <pre>
 * packet FloodingRoutingPacket extends RoutingPacket {
 * 	int floodingRoutingPacketKind enum (floodingRoutingPacketDef);
 * }
 * </pre>
 */
class FloodingRoutingPacket : public ::RoutingPacket
{
  protected:
    int floodingRoutingPacketKind_var;

  private:
    void copy(const FloodingRoutingPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const FloodingRoutingPacket&);

  public:
    FloodingRoutingPacket(const char *name=NULL, int kind=0);
    FloodingRoutingPacket(const FloodingRoutingPacket& other);
    virtual ~FloodingRoutingPacket();
    FloodingRoutingPacket& operator=(const FloodingRoutingPacket& other);
    virtual FloodingRoutingPacket *dup() const {return new FloodingRoutingPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getFloodingRoutingPacketKind() const;
    virtual void setFloodingRoutingPacketKind(int floodingRoutingPacketKind);
};

inline void doPacking(cCommBuffer *b, FloodingRoutingPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, FloodingRoutingPacket& obj) {obj.parsimUnpack(b);}


#endif // _FLOODINGROUTINGPACKET_M_H_
